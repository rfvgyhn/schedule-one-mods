name: CI

on:
  push:
    branches:
      - '**'
env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  LANG: en_US.utf8
  RID: win-x64
  CONFIG: Release
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install util-linux

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.x
            9

      - name: Download game assemblies from private repo
        run: ci/download-game-assemblies.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ASSEMBLIES_PAT }}
          GITHUB_REPO: ${{ secrets.GH_ASSEMBLIES_REPO }}

      - name: Restore
        run: dotnet restore -r ${{ env.RID }}

      - name: Build
        run: dotnet build -c ${{ env.CONFIG }} --no-restore

      - name: Test
        run: dotnet test -c ${{ env.CONFIG }} --no-build

      - name: Version
        id: version
        shell: bash
        run: |
          echo "version-suffix=ci$GITHUB_RUN_ID" >> $GITHUB_OUTPUT
          echo "version=$(grep -oPm1 "(?<=<VersionPrefix>)[^<]+" src/Directory.Build.props)-ci$GITHUB_RUN_ID" >> $GITHUB_OUTPUT

      - name: Publish
        shell: bash
        run: |
          target="${{ env.RID }}"
          release_name="schedule-one-mods_v${{ steps.version.outputs.version }}_$target"
          ci/publish.sh "$target" "$release_name" ${{ env.CONFIG }} ${{ steps.version.outputs.version-suffix }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: schedule-one-mods_${{ steps.version.outputs.version }}_${{ env.RID }}
          path: "artifacts/*${{ env.RID }}*/"