name: CI

on:
  push:
    branches:
      - '**'
env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  LANG: en_US.utf8
  RID: win-x64
  CONFIG: Release
jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            DealsSummary:
              - src/ScheduleOneMods.DealsSummary
              - tests/ScheduleOneMods.DealsSummary
            CounterPriceButton: src/ScheduleOneMods.CounterPriceButton
  build:
    needs: detect-changes
    strategy:
      matrix: 
        project: ${{ fromJSON(needs.detect-changes.outputs.projects) }}
    runs-on: ubuntu-latest
    env:
      src_proj_path: src/ScehduleOneMods.${{ matrix.project }}/ScehduleOneMods.${{ matrix.project }}.csproj
      test_proj_path: tests/ScehduleOneMods.${{ matrix.project }}.Tests/ScehduleOneMods.${{ matrix.project }}.Tests.csproj
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.x
            9

      - name: Download game assemblies from private repo
        run: ci/download-game-assemblies.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ASSEMBLIES_PAT }}
          GITHUB_REPO: ${{ secrets.GH_ASSEMBLIES_REPO }}

      - name: Restore
        run: dotnet restore -r ${{ env.RID }}

      - name: Build
        run: dotnet build ${{ env.src_proj_path_path }} -c ${{ env.CONFIG }}

      - name: Test
        if: ${{ hashFiles(env.test_proj_path) != '' }}
        run: dotnet test ${{ env.test_proj_path }} -c ${{ env.CONFIG }}

      - name: Version
        id: version
        shell: bash
        run: |
          version="$(grep -oPm1 "(?<=<VersionPrefix>)[^<]+" ${{ env.src_proj_path }})-ci$GITHUB_RUN_ID"
          echo "version-suffix=ci$GITHUB_RUN_ID" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "release_name=schedule-one-mods_${{ matrix.project }}_v$version_${{ env.RID }}" >> $GITHUB_OUTPUT

      - name: Publish
        shell: bash
        run: ci/publish.sh ${{ matrix.project }} ${{ env.RID }} ${{ steps.version.outputs.release_name }} ${{ env.CONFIG }} ${{ steps.version.outputs.version-suffix }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.version.outputs.release_name }}
          path: "artifacts/*${{ env.RID }}*/"